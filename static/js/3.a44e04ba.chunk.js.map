{"version":3,"sources":["components/pages/Dialogs/Dialogs.module.css","components/pages/Dialogs/Messages/MessageItem/Message.module.css","components/pages/Dialogs/Messages/Messages.module.css","components/pages/Dialogs/Persons/Persons.module.css","components/pages/Dialogs/Persons/DialogItem/DialogItem.module.css","components/pages/Dialogs/Messages/MessageItem/Message.tsx","components/pages/Dialogs/Messages/Messages.tsx","components/pages/Dialogs/Messages/MessagesContainer.tsx","components/pages/Dialogs/Persons/DialogItem/DialogItem.tsx","components/pages/Dialogs/Persons/Persons.tsx","components/pages/Dialogs/Persons/PersonsContainer.tsx","components/pages/Dialogs/Dialogs.tsx"],"names":["module","exports","Message","props","className","classes","wrapper","user","right","left","message","Messages","messages","map","key","id","onAddMessage","addMessage","input","onKeyDown","event","onChange","e","text","currentTarget","value","updateNewMessageText","messagesArea","newMessageText","placeholder","onClick","messageBtn","MessagesContainer","connect","state","messagesPage","messagesData","DialogsActions","DialogItem","path","dialog","activeClassName","active","to","name","Persons","Dialogs","dialogs","dialogs_items_wrapper","dialogs_items","PersonsContainer","dispatch"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,MAAQ,yB,oBCA1FD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,SAAW,2BAA2B,MAAQ,wBAAwB,aAAe,+BAA+B,WAAa,+B,oBCAvLD,EAAOC,QAAU,CAAC,sBAAwB,uCAAuC,cAAgB,iC,oBCAjGD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,uGCmBhDC,EAbwB,SAACC,GAEpC,OACI,yBAAKC,UAAS,UAAKC,IAAQC,UACvB,yBAAKF,UAAS,UAHW,MAAdD,EAAMI,KAAgBF,IAAQG,MAAQH,IAAQI,OAIrD,yBAAKL,UAAWC,IAAQK,SACnBP,EAAMO,Y,kBC0CZC,EA1C0B,SAACR,GACtC,IAAIS,EAAWT,EAAMS,SAChBC,KAAI,SAACH,GAAD,OACD,kBAAC,EAAD,CAASH,KAAMG,EAAQH,KAAMO,IAAKJ,EAAQK,GAAIL,QAASA,EAAQA,aAQjEM,EAAe,WACjBb,EAAMc,cASV,OACI,yBAAKb,UAAWC,IAAQC,SACpB,yBAAKF,UAAWC,IAAQO,UACnBA,GAEL,yBAAKR,UAAWC,IAAQa,OACpB,8BACIC,UArBF,SAACC,GACO,UAAdA,EAAMN,KAAiBE,KAqBfK,SAdQ,SAACC,GACrB,IAAIC,EAAOD,EAAEE,cAAcC,MAC3BtB,EAAMuB,qBAAqBH,IAafnB,UAAWC,IAAQsB,aACnBF,MAAOtB,EAAMyB,eACbC,YAAY,sBAEhB,4BAAQC,QAASd,EAAcZ,UAAWC,IAAQ0B,YAC9C,4C,iBCvBLC,EAFWC,aAdJ,SAACC,GACnB,MAAO,CACHN,eAAgBM,EAAMC,aAAaP,eACnChB,SAAUsB,EAAMC,aAAaC,gBAWJ,eAAsBC,KAA7BJ,CAA8CtB,G,4CCLzD2B,EAV8B,SAACnC,GAC1C,IAAIoC,EAAO,YAAcpC,EAAMY,GAE/B,OACI,kBAAC,IAAD,CAASX,UAAWC,IAAQmC,OAAQC,gBAAiBpC,IAAQqC,OAAQC,GAAIJ,GACpEpC,EAAMyC,OCYJC,EAhBwB,SAAC1C,GACpC,IAAI2C,EAAU3C,EAAM4C,QACflC,KAAI,SAAC2B,GAAD,OACD,kBAAC,EAAD,CAAY1B,IAAK0B,EAAOzB,GAAI6B,KAAMJ,EAAOI,KAAM7B,GAAIyB,EAAOzB,QAIlE,OACI,yBAAKX,UAAWC,IAAQ2C,uBACpB,yBAAK5C,UAAWC,IAAQ4C,eACnBH,KCEFI,EAFUjB,aAXH,SAACC,GACnB,MAAO,CACHa,QAASb,EAAMC,aAAaY,YAIX,SAACI,GACtB,MAAO,KAIclB,CAA6CY,GCHvDC,UAV4B,SAAC3C,GACxC,OACI,yBAAKC,UAAWC,IAAQ0C,SACpB,kBAAC,EAAD,MACA,kBAAC,EAAD","file":"static/js/3.a44e04ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2l_8M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__6-JII\",\"left\":\"Message_left__3tf73\",\"right\":\"Message_right__2fOey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Messages_wrapper__3xcgg\",\"messages\":\"Messages_messages__3pDTk\",\"input\":\"Messages_input__lcKbv\",\"messagesArea\":\"Messages_messagesArea__-6Tw3\",\"messageBtn\":\"Messages_messageBtn__Ff0dR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_items_wrapper\":\"Persons_dialogs_items_wrapper__3dYkN\",\"dialogs_items\":\"Persons_dialogs_items__j4gVH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__kGLm4\",\"active\":\"DialogItem_active___gswV\"};","import React from 'react';\r\nimport classes from './Message.module.css'\r\n\r\ntype MessageType = {\r\n    user: string\r\n    message: string\r\n}\r\nconst Message: React.FC<MessageType> = (props) => {\r\n    let style = () => (props.user == 'me') ? classes.right : classes.left;\r\n    return (\r\n        <div className={`${classes.wrapper}`}>\r\n            <div className={`${style()}`}>\r\n                <div className={classes.message}>\r\n                    {props.message}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React, { BaseSyntheticEvent } from 'react';\r\nimport Message from './MessageItem/Message';\r\nimport classes from './Messages.module.css';\r\nimport { MessagesDataType } from './../../../../types/types';\r\nimport { DialogsActionsType } from '../../../../redux/dialogsReducer';\r\n\r\n\r\ntype MessagesType = {\r\n    newMessageText: string\r\n    messages: Array<MessagesDataType>\r\n    addMessage: () => void\r\n    updateNewMessageText: (text: string) => void \r\n}\r\nconst Messages: React.FC<MessagesType> = (props) => {\r\n    let messages = props.messages\r\n        .map((message: MessagesDataType) => (\r\n            <Message user={message.user} key={message.id} message={message.message} />\r\n        ));\r\n\r\n\r\n    const enter = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.key === 'Enter') onAddMessage();\r\n    };\r\n\r\n    const onAddMessage = () => {\r\n        props.addMessage();\r\n    };\r\n\r\n    const onMessageChange = (e: BaseSyntheticEvent) => {\r\n        let text = e.currentTarget.value;\r\n        props.updateNewMessageText(text);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.messages}>\r\n                {messages}\r\n            </div>\r\n            <div className={classes.input}>\r\n                <textarea\r\n                    onKeyDown={enter}\r\n                    onChange={onMessageChange}\r\n                    className={classes.messagesArea}\r\n                    value={props.newMessageText}\r\n                    placeholder='Enter new message'\r\n                />\r\n                <button onClick={onAddMessage} className={classes.messageBtn}>\r\n                    <span>&#8250;</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Messages;","import React, { Dispatch } from 'react';\r\nimport Messages from './Messages';\r\nimport { connect } from 'react-redux';\r\nimport { DialogsActions } from '../../../../redux/dialogsReducer';\r\nimport { AppStateType } from '../../../../redux/redux-store';\r\nimport { Action } from 'redux';\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        newMessageText: state.messagesPage.newMessageText,\r\n        messages: state.messagesPage.messagesData\r\n    };\r\n};\r\n\r\n/* let mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        addMessage: () => { dispatch(DialogsActions.addMessage()) },\r\n        updateNewMessageText: (text: string) => { dispatch(DialogsActions.updateNewMessageText(text)) },\r\n    };\r\n}; */\r\n\r\nconst MessagesContainer = connect(mapStateToProps, {...DialogsActions})(Messages);\r\n\r\nexport default MessagesContainer;","import React from 'react';\r\nimport classes from './DialogItem.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype DialogItemType = {\r\n    id: number\r\n    name: string\r\n}; \r\nconst DialogItem: React.FC<DialogItemType> = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <NavLink className={classes.dialog} activeClassName={classes.active} to={path}>\r\n            {props.name}\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './Persons.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport { DialogsUsersType } from '../../../../types/types';\r\nimport { PseudoBigInt } from 'typescript';\r\n\r\ntype PersonsType = {\r\n    dialogs: Array<DialogsUsersType>\r\n}\r\nconst Persons: React.FC<PersonsType> = (props) => {\r\n    let Dialogs = props.dialogs\r\n        .map((dialog: DialogsUsersType) => (\r\n            <DialogItem key={dialog.id} name={dialog.name} id={dialog.id} />\r\n        ));\r\n\r\n\r\n    return (\r\n        <div className={classes.dialogs_items_wrapper}>\r\n            <div className={classes.dialogs_items}>\r\n                {Dialogs}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Persons;","import React, { Dispatch } from 'react';\r\nimport Persons from './Persons';\r\nimport { connect } from 'react-redux';\r\nimport { AppStateType } from '../../../../redux/redux-store';\r\nimport { Action } from 'redux';\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogs: state.messagesPage.dialogs,\r\n    };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch<Action>) => {\r\n    return {};\r\n};\r\n\r\n\r\nconst PersonsContainer = connect(mapStateToProps, mapDispatchToProps)(Persons);\r\n\r\nexport default PersonsContainer;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport MessagesContainer from './Messages/MessagesContainer';\r\nimport PersonsContainer from './Persons/PersonsContainer';\r\n\r\ntype DialogsMainType = {};\r\nconst Dialogs: React.FC<DialogsMainType> = (props) => {\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <PersonsContainer />\r\n            <MessagesContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Dialogs;"],"sourceRoot":""}